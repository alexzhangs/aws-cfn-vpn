## Environment variables used by xsh utility `aws/cfn/deploy`.
## Reference: https://github.com/xsh-lib/aws

# Format version of this config file.
# Used to check the compatibility with xsh utility.
VERSION=0.1.0

## Below configs can be overridden in command line while calling `aws/cfn/deploy`.

# STACK_NAME=<StackName>
#
# Required: Yes
# Default: None
# Valid Characters: [a-zA-Z0-9-]
# ---
# Example:
#   STACK_NAME=MyStack

STACK_NAME=sample-2

# ENVIRONMENT=[Name]
#
# Required: No
# Default: None
# Valid Characters: [a-zA-Z0-9-]
# Description:
#   Environment name, set whatever a name you like or leave it empty.
#   If set this, the full stack name will look like: {STACK_NAME}-{ENVIRONMENT}
# ---
# Example:
#   ENVIRONMENT=DEV

ENVIRONMENT=sb

# RANDOM_STACK_NAME_SUFFIX=[0 | 1]
#
# Required: No
# Default: None
# Valid Values:
#   1: Suffix stack name as:
#      {STACK_NAME}-{RANDOM_STACK_NAME_SUFFIX}
#      or: {STACK_NAME}-{ENVIRONMENT}-{RANDOM_STACK_NAME_SUFFIX}
#      Usually set this for test purpose.
#   0: No suffix on stack name.
# ---
# Example:
#   RANDOM_STACK_NAME_SUFFIX=1

RANDOM_STACK_NAME_SUFFIX=1

# DEPENDS=( <ParameterName>=<NestedTemplate> )
#
# Required: Yes if has nested template, otherwise No
# Default: None
# Syntax:
#   <ParameterName>: The name of template parameter that is referred at the
#                    value of nested template property `TemplateURL`.
#   <NestedTemplate>: A local path or a S3 URL starting with `s3://` or
#                     `https://` pointing to the nested template.
#                     The nested templates at local is going to be uploaded
#                     to S3 Bucket automatically during the deployment.
# Description:
#   Double quote the pairs which contain whitespaces or special characters.
#   Use `#` to comment out.
# ---
# Example:
#   DEPENDS=(
#       NestedTemplateFooURL=/path/to/nested/foo/stack.json
#       NestedTemplateBarURL=/path/to/nested/bar/stack.json
#   )

DEPENDS=(
    "VpcStackTemplateURL=../aws-cfn-vpc/stack.json"

    ## USED WITH EnableVpcPeerAcceptor=1
    #"VpcPeerAcceptorStackTemplateURL=../aws-cfn-vpc-peer-acceptor/stack.json"

    ## USED WITH EnableVpcPeerRequester=1
    "VpcPeerRequesterStackTemplateURL=../aws-cfn-vpc-peer-requester/stack.json"

    ## USED WITH EnableConfigProvider=1
    "ConfigProviderStackTemplateURL=../aws-cfn-config-provider/stack.json"

    ## USED WITH EnableLexBot=1
    #"LexBotStackTemplateURL=../aws-cfn-vpn-lexbot/stack.json"
)

# LAMBDA=( <S3BucketParameterName>:<S3KeyParameterName>=<LambdaFunction> )
#
# Required: Yes if has None-inline Lambda Function, otherwise No
# Default: None
# Syntax:
#   <S3BucketParameterName>: The name of template parameter that is referred
#                            at the value of Lambda property `Code.S3Bucket`.
#   <S3KeyParameterName>: The name of template parameter that is referred
#                         at the value of Lambda property `Code.S3Key`.
#   <LambdaFunction>: A local path or a S3 URL starting with `s3://` pointing
#                     to the Lambda Function.
#                     The Lambda Functions at local is going to be zipped and
#                     uploaded to S3 Bucket automatically during the deployment.
# Description:
#   Double quote the pairs which contain whitespaces or special characters.
#   Use `#` to comment out.
# ---
# Example:
#   DEPENDS=(
#       S3BucketForLambdaFoo:S3KeyForLambdaFoo=/path/to/LambdaFoo.py
#       S3BucketForLambdaBar:S3KeyForLambdaBar=s3://mybucket/LambdaBar.py
#   )

LAMBDA=(
    ## USED WITH EnableSSM=1
    #"S3BucketForLambdaSnsTopicSubscriber:S3KeyForLambdaSnsTopicSubscriber=lambdas/LambdaSnsTopicSubscriber.py"
    #"S3BucketForLambdaSsmApi:S3KeyForLambdaSsmApi=lambdas/LambdaSsmApi.py"
    #"S3BucketForLambdaLayerRequests:S3KeyForLambdaLayerRequests=lambdas/layers/LambdaLayerRequests.zip"

    ## USED WITH EnableSSN=1
    "S3BucketForSsnLambdaSnsTopicSubscriber:S3KeyForSsnLambdaSnsTopicSubscriber=lambdas/SsnLambdaSnsTopicSubscriber.py"

    ## USED WITH EnableLexBot=1
    #"S3BucketForLambdaLexBot:S3KeyForLambdaLexBot=lambdas/LambdaLexBot.py"
)

# LOGICAL_ID=[LogicalId]
#
# Required: No
# Default: None
# Valid Value: Logical resource ID of AWS::EC2::Instance.
# Description:
#   If set this, will try to get the console output of the EC2 Instance
#   over CLI when the stack deployment goes wrong.
# ---
# Example:
#   LOGICAL_ID=WebServerInstance

LOGICAL_ID=VPNServerInstance

# TIMEOUT=[Minutes]
#
# Required: No
# Default: None
# Valid Value: Integer
# Description:
#   Amount of time that can pass for stack creation.
# ---
# Example:
#   TIMEOUT=5

TIMEOUT=

# OPTIONS=(
#     <ParameterName>=<ParameterValue>
# )
#
# Required: Yes if the template has required parameters, otherwise No
# Default: The parameters for nested templates and Lambda Functions which
#          were defined with `DEPENDS` and `LAMBDA`.
# Syntax:
#   <ParameterName>: The name of template parameters.
#   <ParameterValue>: The value for the parameter.
# Description:
#   The options here will be passed to command `create-stack --parameters`
#   after being translated to the syntax:
#   `ParameterKey=<ParameterName>,ParameterValue=<ParameterValue> ...`
#
#   Double quote the pairs which contain whitespaces or special characters.
#   Use `#` to comment out.
# ---
# Example:
#   OPTIONS=(
#       MyParam=MyValue
#   )

OPTIONS=(
    ## COMMON OPTIONS
    "VpcCidrBlock=10.0.$((2*4)).0/22"
    "SubnetCidrBlocks='10.0.$((2*4)).0/24,10.0.$((2*4+1)).0/24,10.0.$((2*4+2)).0/24,10.0.$((2*4+3)).0/24'"
    "KeyPairName=aws-ek-sample-2-sb-ap-northeast-1"
    "InstanceType=t2.micro"
    "EipDomain=vpc"

    ## SHADOWSOCKS COMMON OPTIONS

    ## USED WITH EnableSSM=1 *OR* EnableSSN=1
    "DomainNameServerEnv="
    "SSPortBegin=8381"
    "SSPortEnd=8385"

    ## SHADOWSOCKS NODE OPTIONS
    "EnableSSN=1"

    ## USED WITH EnableSSN=1
    "SSDomain="
    "SSDomainNameServerEnv="
    "SSManagerInterface=2" # 1: Localhost, 2: Private, 3: Public.
    "SSManagerPort=6001"
    "SSEncrypt=aes-256-gcm"
    "SSTimeout=30"
    "SSV2Ray=0"
    "SSVersion=latest"

    ## SHADOWSOCKS MANAGER OPTIONS
    "EnableSSM=0"

    ## USED WITH EnableSSM=1
    #"SSMDomain="
    #"SSMDomainNameServerEnv="
    #"SSMPort="
    #"SSMAdminUsername="
    #"SSMAdminPassword="
    #"SSMAdminEmail="
    #"SSMTimeZone="
    #"SSMVersion="

    ## VPC PEER ACCEPTOR OPTIONS
    "EnableVpcPeerAcceptor=0"

    ## VPC PEER REQUESTER OPTIONS
    "EnableVpcPeerRequester=1"

    ## USED WITH EnableVpcPeerRequester=1
    "SSMAccountId=<your_aws_account_id_of_owner_of_manager_stack>"
    "VpcPeerAcceptorVpcId=<your_acceptor_vpc_id>"
    "VpcPeerAcceptorRegion=<your_acceptor_region>"
    "VpcPeerAcceptorRoleArn=<your_rolearn_of_acceptor_stack>"
    "VpcPeerAcceptorCidrBlock=10.0.0.0/22"
    "VpcPeerAcceptorSqsQueueUrl=<your_sqs_queue_url_of_acceptor_stack>"

    ## LEXBOT OPTIONS
    "EnableLexBot=0"

    ## USED WITH EnableLexBot=1
    #"LexBotRegion="

    ## CONFIG OPTIONS
    "EnableConfigConsumer=0"
    "EnableConfigProvider=1"

    ## USED WITH EnableConfigProvider=1 and EnableConfigConsumer=0
    "SnsTopicArn=<your_snstopicarn_of_ssm_stack>"

    ## L2TP OPTIONS
    "EnableL2TP=0"

    ## USED WITH EnableL2TP=1

    #"L2TPDomain="
    #"L2TPDomainNameServerEnv="
    #"L2TPUsername="
    #"L2TPPassword="
    #"L2TPSharedKey="
    #"L2TPPrimaryDNS="
    #"L2TPSecondaryDNS="
)

# DISABLE_ROLLBACK=[0 | 1]
#
# Required: No
# Default: Depends on CloudFormation (Rollback on error by default)
# Valid Value:
#   0: Rollback stack on error.
#   1: Disable to rollback stack on error.
# ---
# Example:
#   DISABLE_ROLLBACK=1

DISABLE_ROLLBACK=

# DELETE=[0 | 1]
#
# Required: No
# Default: 0
# Valid Value:
#   0: Do nothing.
#   1: Delete stack after deployment no matter succeeded or failed.
#      Usually set this for test purpose.
# ---
# Example:
#   DELETE=1

DELETE=

