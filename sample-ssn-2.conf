# Configuration used by aws-cfn-deploy
# All following setting can be overridded by parameters when calling aws-cfn-deploy.

# Stack Name, if not set, will use the <directory name> where stack.json is located.
# If ENVIRONMENT and/or RANDOM_STACK_NAME_SUFFIX is set, full Stack Name would look
# like: {STACK_NAME}-{ENVIRONMENT}-{RANDOM_NUMBER}
# or: {STACK_NAME}-{ENVIRONMENT}
# or: {STACK_NAME}-{RANDOM_NUMBER}
# ---
# Example:
# STACK_NAME=MyStack
STACK_NAME=VPN-SSN-2

# Environment name, set whatever a name you like or leave it empty.
# The name will be appended into STACK_NAME.
# ---
# Example:
# ENVIRONMENT=SANDBOX
ENVIRONMENT=SAMPLE

# Random Stack Name suffix
# If set to 1, will append a random suffix into Stack Name.
# Usually set this For testing purpose.
# ---
# Example:
RANDOM_STACK_NAME_SUFFIX=1

# Format: <ParameterName>=<Path>
# Depended templates by this template, Leave empty if don't have one.
# The PATH support relative or absolute path or a S3 URL started with 'https://'.
# ---
# Example:
# DEPENDS=(
#     VpcStackTemplateURL=../aws-cfn-vpc/stack.json
# )
DEPENDS=(
    "VpcStackTemplateURL=../aws-cfn-vpc/stack.json"

    ## USED WITH EnableVpcPeerAccepter=0
    #"VpcPeerAccepterStackTemplateURL=../aws-cfn-vpc-peer-accepter/stack.json"

    ## USED WITH EnableVpcPeerRequester=1
    "VpcPeerRequesterStackTemplateURL=../aws-cfn-vpc-peer-requester/stack.json"
)

# Logical Resource ID in the template.
# If set, when stack creation failed, will try to extract cloud-init log
# through SSH from this resource.
# Supported Resource Type:
#   AWS::EC2::Instance
#   AWS::ElasticLoadBalancing::LoadBalancer
# To make it happen, for the resource, you will have to make sure that
# the SSHD port 22 is opened up to the host executing this deployment.
# ---
# Example:
# LOGICAL_ID=WebServerInstance
# LOGICAL_ID=WebServerELB
LOGICAL_ID=VPNServerInstance

# In minutes, amount of time that can pass for stack creation.
# The count is started at the moment of executing create-stack.
# ---
# Example:
# TIMEOUT=5
TIMEOUT=

# Format: <KEY>=<VALUE>
# Will be convert to format: ParameterKey=<KEY>,ParameterValue=<VALUE>
# And pass to: create-stack --parameters
# ---
# Example:
# OPTIONS=(
#     KeyName=MyKeyName
# )
OPTIONS=(
    ## COMMON OPTIONS
    "VpcCidrBlock=10.2.0.0/16"
    "SubnetCidrBlocks=\"10.2.0.0/24,10.2.1.0/24,10.2.2.0/24,10.2.3.0/24\""
    "KeyPairName=<your_aws_ec2_key_pair_name>"
    "InstanceType=t2.micro"

    ## VPC PEER ACCEPTER OPTIONS 
    "EnableVpcPeerAccepter=0"

    ## VPC PEER REQUESTER OPTIONS 
    "EnableVpcPeerRequester=1"

    ## USED WITH EnableVpcPeerRequester=1
    "VpcPeerAccepterVpcId=<your_accepter_vpc_id>"
    "VpcPeerAccepterRegion=<your_accepter_region>"
    "VpcPeerAccepterAccountId=<your_aws_account_id_of_owner_of_accepter>"
    "VpcPeerAccepterRoleArn=<your_rolearn_of_accepter_stack>"
    "VpcPeerAccepterCidrBlock=10.0.0.0/16"
    "VpcPeerAccepterSqsQueueUrl=<your_sqs_queue_url_of_accepter_stack>"

    ## SHADOWSOCKS COMMON OPTIONS
    
    ## USED WITH EnableSSN=1 *OR* EnableSSM=1
    "SSPortBegin=8381"
    "SSPortEnd=8480"

    ## USED WITH EnableSSN=1 *AND* EnableSSM=1
    #"SSDomain="

    ## SHADOWSOCKS NODE OPTIONS
    "EnableSSN=1"

    ## USED WITH EnableSSN=1
    "SSManagerInterface=2" # 1: Localhost, 2: Private, 3: Public.
    "SSManagerPort=6001"
    "SSEncrypt=aes-256-cfb"
    "SSTimeout=30"
    "SSFastopen=false"

    ## SHADOWSOCKS MANAGER OPTIONS
    "EnableSSM=0"

    ## USED WITH EnableSSM=1
    #"SSMDomain="
    #"SSMPort="
    #"SSMAdminUsername="
    #"SSMAdminPassword="
    #"SSMAdminEmail="
    #"SSMTimeZone="

    ## L2TP OPTIONS
    "EnableL2TP=0"

    ## USED WITH EnableL2TP=1

    #"L2TPUsername="
    #"L2TPPassword="
    #"L2TPSharedKey="
    #"L2TPPrimaryDNS="
    #"L2TPSecondaryDNS="
)

# If set to 1, will disable rollback of the stack when stack creation failed.
# Default is 0
# ---
DISABLE_ROLLBACK=1

# If set to 1, stack will be deleted after creation, whatever the createion
# is successful or failed.
# Usually set this for testing purpose.
# ---
DELETE=1
