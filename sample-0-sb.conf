## Environment variables used by xsh utility `aws/cfn/deploy`.
## Reference: https://github.com/xsh-lib/aws

# Format version of this config file.
# Used to check the compatibility with xsh utility.
VERSION=0.1.0

## Below configs can be overridden in command line while calling `aws/cfn/deploy`.

# STACK_NAME=<StackName>
#
# Required: Yes
# Default: None
# Valid Characters: [a-zA-Z0-9-]
# ---
# Example:
#   STACK_NAME=MyStack

STACK_NAME=sample-0

# ENVIRONMENT=[Name]
#
# Required: No
# Default: None
# Valid Characters: [a-zA-Z0-9-]
# Description:
#   Environment name, set whatever a name you like or leave it empty.
#   If set this, the full stack name will look like: {STACK_NAME}-{ENVIRONMENT}
# ---
# Example:
#   ENVIRONMENT=DEV

ENVIRONMENT=sb

# RANDOM_STACK_NAME_SUFFIX=[0 | 1]
#
# Required: No
# Default: None
# Valid Values:
#   1: Suffix stack name as:
#      {STACK_NAME}-{RANDOM_STACK_NAME_SUFFIX}
#      or: {STACK_NAME}-{ENVIRONMENT}-{RANDOM_STACK_NAME_SUFFIX}
#      Usually set this for test purpose.
#   0: No suffix on stack name.
# ---
# Example:
#   RANDOM_STACK_NAME_SUFFIX=1

RANDOM_STACK_NAME_SUFFIX=1

# DEPENDS=( <ParameterName>=<NestedTemplate> )
#
# Required: Yes if has nested template, otherwise No
# Default: None
# Syntax:
#   <ParameterName>: The name of template parameter that is referred at the
#                    value of nested template property `TemplateURL`.
#   <NestedTemplate>: A local path or a S3 URL starting with `s3://` or
#                     `https://` pointing to the nested template.
#                     The nested templates at local is going to be uploaded
#                     to S3 Bucket automatically during the deployment.
# Description:
#   Double quote the pairs which contain whitespaces or special characters.
#   Use `#` to comment out.
# ---
# Example:
#   DEPENDS=(
#       NestedTemplateFooURL=/path/to/nested/foo/stack.json
#       NestedTemplateBarURL=/path/to/nested/bar/stack.json
#   )

DEPENDS=(
    "VpcStackTemplateURL=../aws-cfn-vpc/stack.json"

    ## USED WITH EnableVpcPeerAcceptor=1
    "VpcPeerAcceptorStackTemplateURL=../aws-cfn-vpc-peer-acceptor/stack.json"

    ## USED WITH EnableVpcPeerRequester=1
    #"VpcPeerRequesterStackTemplateURL=../aws-cfn-vpc-peer-requester/stack.json"

    ## USED WITH EnableConfigProvider=1
    "ConfigProviderStackTemplateURL=../aws-cfn-config-provider/stack.json"

    ## USED WITH EnableLexBot=1
    "LexBotStackTemplateURL=../aws-cfn-vpn-lexbot/stack.json"

    ## USED WITH EnableSSM=1 AND SSMDomain IS USED
    "AcmStackTemplateURL=../aws-cfn-acm/stack.json"
)

# LAMBDA=( <S3BucketParameterName>:<S3KeyParameterName>=<LambdaFunction> )
#
# Required: Yes if has None-inline Lambda Function, otherwise No
# Default: None
# Syntax:
#   <S3BucketParameterName>: The name of template parameter that is referred
#                            at the value of Lambda property `Code.S3Bucket`.
#   <S3KeyParameterName>: The name of template parameter that is referred
#                         at the value of Lambda property `Code.S3Key`.
#   <LambdaFunction>: A local path or a S3 URL starting with `s3://` pointing
#                     to the Lambda Function.
#                     The Lambda Functions at local is going to be zipped and
#                     uploaded to S3 Bucket automatically during the deployment.
# Description:
#   Double quote the pairs which contain whitespaces or special characters.
#   Use `#` to comment out.
# ---
# Example:
#   DEPENDS=(
#       S3BucketForLambdaFoo:S3KeyForLambdaFoo=/path/to/LambdaFoo.py
#       S3BucketForLambdaBar:S3KeyForLambdaBar=s3://mybucket/LambdaBar.py
#   )

LAMBDA=(
    ## USED WITH EnableSSM=1
    "S3BucketForLambdaSnsTopicSubscriber:S3KeyForLambdaSnsTopicSubscriber=LambdaSnsTopicSubscriber.py"
    "S3BucketForLambdaSsmApi:S3KeyForLambdaSsmApi=LambdaSsmApi.py"
    "S3BucketForLambdaLayerRequests:S3KeyForLambdaLayerRequests=LambdaLayerRequests.zip"

    ## USED WITH EnableSSN=1
    #"S3BucketForSsnLambdaSnsTopicSubscriber:S3KeyForSsnLambdaSnsTopicSubscriber=SsnLambdaSnsTopicSubscriber.py"

    ## USED WITH EnableLexBot=1
    "S3BucketForLambdaLexBot:S3KeyForLambdaLexBot=LambdaLexBot.py"
)

# LOGICAL_ID=[LogicalId]
#
# Required: No
# Default: None
# Valid Value: Logical resource ID of AWS::EC2::Instance.
# Description:
#   If set this, will try to get the console output of the EC2 Instance
#   over CLI when the stack deployment goes wrong.
# ---
# Example:
#   LOGICAL_ID=WebServerInstance

LOGICAL_ID=VPNServerInstance

# TIMEOUT=[Minutes]
#
# Required: No
# Default: None
# Valid Value: Integer
# Description:
#   Amount of time that can pass for stack creation.
# ---
# Example:
#   TIMEOUT=5

TIMEOUT=

# OPTIONS=(
#     <ParameterName>=<ParameterValue>
# )
#
# Required: Yes if the template has required parameters, otherwise No
# Default: The parameters for nested templates and Lambda Functions which
#          were defined with `DEPENDS` and `LAMBDA`.
# Syntax:
#   <ParameterName>: The name of template parameters.
#   <ParameterValue>: The value for the parameter.
# Description:
#   The options here will be passed to command `create-stack --parameters`
#   after being translated to the syntax:
#   `ParameterKey=<ParameterName>,ParameterValue=<ParameterValue> ...`
#
#   Double quote the pairs which contain whitespaces or special characters.
#   Use `#` to comment out.
# ---
# Example:
#   OPTIONS=(
#       MyParam=MyValue
#   )

OPTIONS=(
    ## COMMON OPTIONS
    "VpcCidrBlock=10.0.0.0/16"
    "SubnetCidrBlocks=\"10.0.0.0/24,10.0.1.0/24,10.0.2.0/24,10.0.3.0/24\""
    "KeyPairName=aws-ek-sample-0-sb-ap-northeast-1"
    "InstanceType=t2.micro"
    "EipDomain=vpc"

    ## SHADOWSOCKS COMMON OPTIONS

    ## USED WITH EnableSSN=1 *OR* EnableSSM=1 *OR* EnableL2TP=1
    "SSPortBegin=8381"
    "SSPortEnd=8480"
    "Domain="
    "DomainNameServer="
    "DomainNameServerUsername="
    "DomainNameServerCredential="

    ## SHADOWSOCKS NODE OPTIONS
    "EnableSSN=0"

    ## USED WITH EnableSSN=1
    #"SSDomain="
    #"SSManagerInterface=" # 1: Localhost, 2: Private, 3: Public.
    #"SSManagerPort="
    #"SSEncrypt="
    #"SSTimeout="
    #"EnableV2ray=0"

    ## SHADOWSOCKS MANAGER OPTIONS
    "EnableSSM=1"

    ## USED WITH EnableSSM=1
    "SSMDomain="
    "SSMPort=80"
    "SSMAdminUsername=admin"
    "SSMAdminPassword=passw0rd"
    "SSMAdminEmail="
    "SSMTimeZone=UTC"

    ## VPC PEER ACCEPTOR OPTIONS
    "EnableVpcPeerAcceptor=1"

    ## VPC PEER REQUESTER OPTIONS
    "EnableVpcPeerRequester=0"

    ## USED WITH EnableVpcPeerRequester=1
    #"SSMAccountId="
    #"VpcPeerAcceptorVpcId="
    #"VpcPeerAcceptorRegion="
    #"VpcPeerAcceptorRoleArn="
    #"VpcPeerAcceptorCidrBlock="
    #"VpcPeerAcceptorSqsQueueUrl="

    ## LEXBOT OPTIONS
    "EnableLexBot=1"

    ## USED WITH EnableLexBot=1
    "LexBotRegion=us-west-2"

    ## CONFIG OPTIONS
    "EnableConfigConsumer=1"
    "EnableConfigProvider=1"

    ## USED WITH EnableConfigProvider=1 and EnableConfigConsumer=0
    #"SnsTopicArn="

    ## L2TP OPTIONS
    "EnableL2TP=1"

    ## USED WITH EnableL2TP=1

    "L2TPDomain="
    "L2TPUsername=vpnuser"
    "L2TPPassword=passw0rd"
    "L2TPSharedKey=SharedSecret"
    "L2TPPrimaryDNS=8.8.8.8"
    "L2TPSecondaryDNS=8.8.4.4"
)

# DISABLE_ROLLBACK=[0 | 1]
#
# Required: No
# Default: Depends on CloudFormation (Rollback on error by default)
# Valid Value:
#   0: Rollback stack on error.
#   1: Disable to rollback stack on error.
# ---
# Example:
#   DISABLE_ROLLBACK=1

DISABLE_ROLLBACK=

# DELETE=[0 | 1]
#
# Required: No
# Default: 0
# Valid Value:
#   0: Do nothing.
#   1: Delete stack after deployment no matter succeeded or failed.
#      Usually set this for test purpose.
# ---
# Example:
#   DELETE=1

DELETE=

